/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.20
 * Generated at: 2017-11-21 05:54:55 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mid.term.CommonDb;
import java.sql.*;
import java.util.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/user/include.jsp", Long.valueOf(1511087567869L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("mid.term.CommonDb");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("  \r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>主页</title>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/common.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/bootstrap-theme.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/bootstrap-theme.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/bootstrap.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/bootstrap.min.css\">\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/jquery-3.2.1.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/user.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/index.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\" src=\"../js/bootstrap.min.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../editormd/examples/css/style.css\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../editormd/css/editormd.preview.css\" />\r\n");
      out.write("<script src=\"../editormd/examples/js/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"../editormd/lib/marked.min.js\"></script>\r\n");
      out.write("<script src=\"../editormd/lib/prettify.min.js\"></script>\r\n");
      out.write("<script src=\"../editormd/lib/raphael.min.js\"></script>\r\n");
      out.write("<script src=\"../editormd/lib/underscore.min.js\"></script>\r\n");
      out.write("<script src=\"../editormd/lib/sequence-diagram.min.js\"></script>\r\n");
      out.write("<script src=\"../editormd/lib/flowchart.min.js\"></script>\r\n");
      out.write("<script src=\"../editormd/lib/jquery.flowchart.min.js\"></script>\r\n");
      out.write("<script src=\"../editormd/editormd.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</head>\r\n");

int n = ((int)(Math.random() * 10) % 7) + 1;
String img_url = "../images/search-bg" + n + ".jpg";

      out.write("\r\n");
      out.write("<body style=\"background: url(");
      out.print( img_url );
      out.write(")\">\r\n");
      out.write("<div class=\"row center-input-group\">\r\n");
      out.write("<div class=\"col-lg-3\">\r\n");
      out.write("<p class=\"home-user-name btn\"><a href=\"personal_home.jsp\" style=\"color: #EE2C2C;\">");
      out.print( session.getAttribute("user_name") );
      out.write("</a></p>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"col-lg-7\" >\r\n");
      out.write("<div class=\"input-group\">\r\n");
      out.write("<input id=\"key\" style=\"height: 38px; border-radius: 20px 0 0 20px;\" type=\"text\" class=\"form-control\" placeholder=\"请输入你想要搜索的文章\">\r\n");
      out.write("<span class=\"input-group-btn\" id=\"search\">\r\n");
      out.write("<button class=\"btn btn-default search-btn\" type=\"button\">搜索</button>\r\n");
      out.write("</span>\r\n");
      out.write("</div>\r\n");
      out.write("<div id=\"blogs_list\" style=\"float: left; margin-top: 10px; padding: 10px;\">\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("var bghtml;\r\n");
      out.write("var blog;\r\n");
      out.write("$(\"#search\").click(function() {\r\n");
      out.write("\tvar key = $(\"#key\").val();\r\n");
      out.write("\tif(key == \"\") {\r\n");
      out.write("\t\treturn;\r\n");
      out.write("\t}\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl: \"../getBlogsByKey\",\r\n");
      out.write("\t\ttype: \"POST\",\r\n");
      out.write("\t\tdata: {\r\n");
      out.write("\t\t\tkey: key\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\tsuccess: function(data) {\r\n");
      out.write("\t\t\tif (data == \"{}\") {\r\n");
      out.write("\t\t\t\talert(\"没有这样的文章\");\r\n");
      out.write("\t\t\t\treturn;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tbghtml = \"\";\r\n");
      out.write("\t\t\tjson = JSON.parse(data);\r\n");
      out.write("\t\t\tfor(var i in json) {\r\n");
      out.write("\t\t\t\tvar blog = JSON.parse(json[i]);\r\n");
      out.write("\t\t\t\tbghtml += \"<p style='float:left; margin-top: 10px;'><form action='show_blog.jsp' method='POST'><input style='display: none;' name='blog_id'\" +\r\n");
      out.write("\t\t\t\t\" value=\"+ blog['id'] +\"><input style='display: none;' name='author' value=\"+ blog['author'] + \"><input type='submit' value=\" + blog[\"title\"] +\r\n");
      out.write("\t\t\t\t\" class='btn btn-link'>\" +\r\n");
      out.write("\t\t\t\t\"</form></p>\";\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t$(\"#blogs_list\").html(bghtml);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(error) {\r\n");
      out.write("\t\t\talert(\"错误\");\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
